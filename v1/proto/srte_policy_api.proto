//                                 Apache License
//                           Version 2.0, January 2004
//                        https://www.apache.org/licenses/
//
//   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
//
//   1. Definitions.
//
//      "License" shall mean the terms and conditions for use, reproduction,
//      and distribution as defined by Sections 1 through 9 of this document.
//
//      "Licensor" shall mean the copyright owner or entity authorized by
//      the copyright owner that is granting the License.
//
//      "Legal Entity" shall mean the union of the acting entity and all
//      other entities that control, are controlled by, or are under common
//      control with that entity. For the purposes of this definition,
//      "control" means (i) the power, direct or indirect, to cause the
//      direction or management of such entity, whether by contract or
//      otherwise, or (ii) ownership of fifty percent (50%) or more of the
//      outstanding shares, or (iii) beneficial ownership of such entity.
//
//      "You" (or "Your") shall mean an individual or Legal Entity
//      exercising permissions granted by this License.
//
//      "Source" form shall mean the preferred form for making modifications,
//      including but not limited to software source code, documentation
//      source, and configuration files.
//
//      "Object" form shall mean any form resulting from mechanical
//      transformation or translation of a Source form, including but
//      not limited to compiled object code, generated documentation,
//      and conversions to other media types.
//
//      "Work" shall mean the work of authorship, whether in Source or
//      Object form, made available under the License, as indicated by a
//      copyright notice that is included in or attached to the work
//      (an example is provided in the Appendix below).
//
//      "Derivative Works" shall mean any work, whether in Source or Object
//      form, that is based on (or derived from) the Work and for which the
//      editorial revisions, annotations, elaborations, or other modifications
//      represent, as a whole, an original work of authorship. For the purposes
//      of this License, Derivative Works shall not include works that remain
//      separable from, or merely link (or bind by name) to the interfaces of,
//      the Work and Derivative Works thereof.
//
//      "Contribution" shall mean any work of authorship, including
//      the original version of the Work and any modifications or additions
//      to that Work or Derivative Works thereof, that is intentionally
//      submitted to Licensor for inclusion in the Work by the copyright owner
//      or by an individual or Legal Entity authorized to submit on behalf of
//      the copyright owner. For the purposes of this definition, "submitted"
//      means any form of electronic, verbal, or written communication sent
//      to the Licensor or its representatives, including but not limited to
//      communication on electronic mailing lists, source code control systems,
//      and issue tracking systems that are managed by, or on behalf of, the
//      Licensor for the purpose of discussing and improving the Work, but
//      excluding communication that is conspicuously marked or otherwise
//      designated in writing by the copyright owner as "Not a Contribution."
//
//      "Contributor" shall mean Licensor and any individual or Legal Entity
//      on behalf of whom a Contribution has been received by Licensor and
//      subsequently incorporated within the Work.
//
//   2. Grant of Copyright License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      copyright license to reproduce, prepare Derivative Works of,
//      publicly display, publicly perform, sublicense, and distribute the
//      Work and such Derivative Works in Source or Object form.
//
//   3. Grant of Patent License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      (except as stated in this section) patent license to make, have made,
//      use, offer to sell, sell, import, and otherwise transfer the Work,
//      where such license applies only to those patent claims licensable
//      by such Contributor that are necessarily infringed by their
//      Contribution(s) alone or by combination of their Contribution(s)
//      with the Work to which such Contribution(s) was submitted. If You
//      institute patent litigation against any entity (including a
//      cross-claim or counterclaim in a lawsuit) alleging that the Work
//      or a Contribution incorporated within the Work constitutes direct
//      or contributory patent infringement, then any patent licenses
//      granted to You under this License for that Work shall terminate
//      as of the date such litigation is filed.
//
//   4. Redistribution. You may reproduce and distribute copies of the
//      Work or Derivative Works thereof in any medium, with or without
//      modifications, and in Source or Object form, provided that You
//      meet the following conditions:
//
//      (a) You must give any other recipients of the Work or
//          Derivative Works a copy of this License; and
//
//      (b) You must cause any modified files to carry prominent notices
//          stating that You changed the files; and
//
//      (c) You must retain, in the Source form of any Derivative Works
//          that You distribute, all copyright, patent, trademark, and
//          attribution notices from the Source form of the Work,
//          excluding those notices that do not pertain to any part of
//          the Derivative Works; and
//
//      (d) If the Work includes a "NOTICE" text file as part of its
//          distribution, then any Derivative Works that You distribute must
//          include a readable copy of the attribution notices contained
//          within such NOTICE file, excluding those notices that do not
//          pertain to any part of the Derivative Works, in at least one
//          of the following places: within a NOTICE text file distributed
//          as part of the Derivative Works; within the Source form or
//          documentation, if provided along with the Derivative Works; or,
//          within a display generated by the Derivative Works, if and
//          wherever such third-party notices normally appear. The contents
//          of the NOTICE file are for informational purposes only and
//          do not modify the License. You may add Your own attribution
//          notices within Derivative Works that You distribute, alongside
//          or as an addendum to the NOTICE text from the Work, provided
//          that such additional attribution notices cannot be construed
//          as modifying the License.
//
//      You may add Your own copyright statement to Your modifications and
//      may provide additional or different license terms and conditions
//      for use, reproduction, or distribution of Your modifications, or
//      for any such Derivative Works as a whole, provided Your use,
//      reproduction, and distribution of the Work otherwise complies with
//      the conditions stated in this License.
//
//   5. Submission of Contributions. Unless You explicitly state otherwise,
//      any Contribution intentionally submitted for inclusion in the Work
//      by You to the Licensor shall be under the terms and conditions of
//      this License, without any additional terms or conditions.
//      Notwithstanding the above, nothing herein shall supersede or modify
//      the terms of any separate license agreement you may have executed
//      with Licensor regarding such Contributions.
//
//   6. Trademarks. This License does not grant permission to use the trade
//      names, trademarks, service marks, or product names of the Licensor,
//      except as required for reasonable and customary use in describing the
//      origin of the Work and reproducing the content of the NOTICE file.
//
//   7. Disclaimer of Warranty. Unless required by applicable law or
//      agreed to in writing, Licensor provides the Work (and each
//      Contributor provides its Contributions) on an "AS IS" BASIS,
//      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
//      implied, including, without limitation, any warranties or conditions
//      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
//      PARTICULAR PURPOSE. You are solely responsible for determining the
//      appropriateness of using or redistributing the Work and assume any
//      risks associated with Your exercise of permissions under this License.
//
//   8. Limitation of Liability. In no event and under no legal theory,
//      whether in tort (including negligence), contract, or otherwise,
//      unless required by applicable law (such as deliberate and grossly
//      negligent acts) or agreed to in writing, shall any Contributor be
//      liable to You for damages, including any direct, indirect, special,
//      incidental, or consequential damages of any character arising as a
//      result of this License or out of the use or inability to use the
//      Work (including but not limited to damages for loss of goodwill,
//      work stoppage, computer failure or malfunction, or any and all
//      other commercial damages or losses), even if such Contributor
//      has been advised of the possibility of such damages.
//
//   9. Accepting Warranty or Additional Liability. While redistributing
//      the Work or Derivative Works thereof, You may choose to offer,
//      and charge a fee for, acceptance of support, warranty, indemnity,
//      or other liability obligations and/or rights consistent with this
//      License. However, in accepting such obligations, You may act only
//      on Your own behalf and on Your sole responsibility, not on behalf
//      of any other Contributor, and only if You agree to indemnify,
//      defend, and hold each Contributor harmless for any liability
//      incurred by, or claims asserted against, such Contributor by reason
//      of your accepting any such warranty or additional liability.
//
//   END OF TERMS AND CONDITIONS
//
//   Copyright (c) 2022 by cisco Systems, Inc.
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       https://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

// This is the first version of the model for SRTE policies and
// path computation services. Its purpose is to start the conversation
// with operators and vendors. The RPC/messages model will go through major
// changes based on the discussions and the consensus among the operators
// and vendors. The GPB data model should reflect the model from the SRTE policy
// RFC https://datatracker.ietf.org/doc/rfc9256/.

syntax = "proto3";

option go_package = ".;srte";

package SRTE;

// SRTEPolicy gRPC service provides clients a mechanism
// to programmatically create/read/update/delete SR-TE and SRv6TE policies.
// The real-time monitoring of these policies is done via BGP-LS or telemetry.
service SRTEPolicy {
    // The SRTEPolicyAdd RPC is used to create/update a policy based on the
    // passed parameters.
    rpc SRTEPolicyAdd(PolicyMsg) returns (PolicyOpRsp);

    // The SRTEPolicyDelete RPC is used to delete a policy/candidate-paths.
    // If the message only contains the key of the policy, then all the CPs with gRPC
    // originator-protocol are deleted. The policy is also deleted if it has no more CPs.
    // If the message contains the keys of one or more CPs, then only these CPs are
    // deleted and they have to be gRPC CPs.
    // There is no requirement/enforcement for the client to delete the policy/CPs
    // it created.
    rpc SRTEPolicyDelete(PolicyMsg) returns (PolicyOpRsp);
}

message IPv4Address {
  uint32 v4 = 1;
}

message IPv6Address {
  bytes v6 = 1;
}

message IpAddress {
  uint32 v4 = 1;
  bytes v6 = 2;
}

message PolicyKey {
  IpAddress headend = 1;
  uint32 color = 2;
  IpAddress endpoint = 3;
}

message CandidatePathKey {
  message OriginatorID {
    uint32 ASN = 1;
    IpAddress nodeID = 2;
  }
  OriginatorID originatorID = 1;
  uint32 originatorProtocol = 2;
  uint32 discriminator = 3;
}

message PolicyOpRsp {
  message PolicyRsp {
    ReturnCode returnCode = 1;
    PolicyKey key = 2;
  }
  repeated PolicyRsp responses = 1;
}

enum Dataplane {
  MPLS = 0;
  SRV6 = 1;
}

enum CandidatePathType {
  DYNAMIC = 0;
  EXPLICIT = 1;
  PERFLOW = 2;
  COMPOSITE = 3;
}

enum OptimizationMetric {
  TE = 0;
  IGP = 1;
  Latency = 2;
  HOPS = 3;
}

message PerflowCP {
  uint32 DefaultForwardingclass = 1;
  message Mapping {
    uint32 forwardingClass = 1;
    uint32 color = 2;
  }
  repeated Mapping mappings = 2;
}

message CompositeCP {
  message ConstituentCP {
    uint32 color = 1;
    uint32 weight = 2;
  }
  repeated ConstituentCP constituent = 1;
}

message Segment {
  message TypeA {
    uint32 label = 1;
  }
  message TypeB {
    IPv6Address SID = 1;
    uint32 behavior = 2;
    message Structure {
      uint32 locatorBlockLength = 1;
      uint32 locatorNodeLength = 2;
      uint32 functionLength = 3;
      uint32 argumentLength = 4;
    }
    Structure structure = 3;
  }
  message TypeC {
    IPv4Address prefix = 1;
    uint32 flexalgo = 2;
  }
  message TypeD {
    IPv6Address prefix = 1;
    uint32 flexalgo = 2;
  }
  message TypeE {
    IPv4Address prefix = 1;
    uint32 localInterfaceID = 2;
  }
  message TypeF {
    IPv4Address localInterfaceAddress = 1;
    IPv4Address remoteInterfaceAddress = 2;
  }
  message TypeG {
    IPv6Address localPrefix = 1;
    uint32 localInterfaceID = 2;
    IPv6Address remotePrefix = 3;
    uint32 remoteInterfaceID = 4;
  }
  message TypeH {
    IPv6Address localInterfaceAddress = 1;
    IPv6Address remoteInterfaceAddress = 2;
  }
  message TypeI {
    IPv6Address prefix = 1;
    uint32 flexalgo = 2;
  }
  message TypeJ {
    IPv6Address localPrefix = 1;
    uint32 localInterfaceID = 2;
    IPv6Address remotePrefix = 3;
    uint32 remoteInterfaceID = 4;
  }
  oneof SID {
    TypeA typeA = 1;
    TypeB typeB = 2;
    TypeC typeC = 3;
    TypeD typeD = 4;
    TypeE typeE = 5;
    TypeF typeF = 6;
    TypeG typeG = 7;
    TypeH typeH = 8;
    TypeI typeI = 9;
    TypeJ typeJ = 10;
  }
}

message SegmentList {
  string name = 1;
  uint32 weight = 2;
  repeated Segment segments = 3;
}

message ExplicitCP {
  //TE constraints can be added here for Explicit CP.
  //These constraints can be used to validate the segment lists.
  repeated SegmentList segmentList = 1;
}

message TEConstraints {
  message Affinities {
    repeated string includeAny = 1;
    repeated string includeAll = 2;
    repeated string excludeAny = 3;
  }
  Affinities affinities = 1;

  message MetricBounds {
    uint32 igp = 1;
    uint32 te = 2;
    uint32 latency = 3;
  }
  MetricBounds metricBounds = 2;

  message SegmentConstraints {
    enum ProtectionType {
      PROTECTED_PREFERRED = 0;
      PROTECTED_ONLY = 1;
      UNPROTECTED_PREFERRED = 2;
      UNPROTECTED_ONLY = 3;
    }
    ProtectionType protection = 1;
    uint32 flexalgo = 2;
    uint32 MSD = 3;
    //more SRv6TE MSD constraints will be added
  }
  SegmentConstraints segmentConstraints = 3;
}

message DynamicCP {
  OptimizationMetric ometric = 1;
  TEConstraints constraints = 2;
  message MetricMargin {
    enum MarginType {
      RELATIVE = 0;
      ABSOLUTE = 1;
    }
    MarginType type = 1;
    uint32 value = 2;
  }
  MetricMargin metricMargin = 3;
  // This flag is to turn on path computation delegation.
  // When this flag is set, the router delegates to whatever
  // path computer that is configured/used by the router.
  bool delegate = 4;
}

message CandidatePath {
  CandidatePathKey key = 1;
  string name = 2;
  uint32 preference = 3;
  Dataplane dataplane = 4;
  oneof CP {
    DynamicCP dynamic = 5;
    ExplicitCP explicit = 6;
    PerflowCP perflow = 7;
    CompositeCP composite = 8;
  }
}

message SRv6BindingSID {
  string locatorName = 1;
  uint32 behavior = 2;
  IPv6Address SID = 3;
}

enum BindingSIDAllocationMode {
    BSID_EXPLICIT = 0;
    BSID_DYNAMIC  = 1;
}

message Policy {
  PolicyKey key = 1;
  bool transitEligible = 2;
  repeated CandidatePath CPs = 3;
  BindingSIDAllocationMode bindingSIDAllocation = 4;
  uint32 mplsBindingSID = 5;
  SRv6BindingSID srv6BindingSID = 6;
}

message PolicyMsg {
  repeated Policy policies = 1;
}

enum ReturnCode {
  SUCCESS = 0;
  FAIL = 1;
}
